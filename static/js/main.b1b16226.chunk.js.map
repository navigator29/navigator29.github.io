{"version":3,"sources":["assets sync /^/.*$","assets/background.png","assets/leto.png","assets/opened-window-transparent.png","assets/opened-window.png","assets/questions/25-kadr.png","assets/questions/25.png","assets/questions/Elton-John.png","assets/questions/Ivan-Groznyi.png","assets/questions/Jobs.png","assets/questions/Vysockyi.png","assets/questions/den-studenta.png","assets/questions/elka.png","assets/questions/olim-igry.png","assets/questions/primorskyi-krai.png","assets/questions/teleskop.png","assets/window.png","components/Players/Players.tsx","components/Questions/Questions.tsx","components/QuestionModal/QuestionModal.tsx","components/Alert/Alert.tsx","components/Tools/Tools.tsx","components/ServiceMenu/ServiceMenu.tsx","App.tsx","data/Smiles.ts","data/QuestionsData.ts","data/PlayersDefaultData.ts","Store.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Players","inject","action","bound","observer","props","setInterval","runInAction","renderTrigger","player","this","onClick","store","undefined","className","ListGroup","horizontal","players","Item","key","name","dangerouslySetInnerHTML","__html","getSmile","Badge","variant","playersScore","React","Component","observable","Questions","loadNextQuestion","question","Button","onClickBegin","size","totalScore","QuestionModal","texts","filter","_text","index","maxTextToShow","isAnswered","increasePlayerScore","score","onClose","Modal","show","aria-labelledby","centered","onHide","Header","closeButton","Title","Body","text","length","getMoreText","image","classNames","isTextAnswer","src","require","alt","onPlayerClick","computed","Alert","setAlert","type","imageUrl","Tools","prompt","addGuest","ServiceMenu","children","App","answer","onAnswer","currentAlert","smilesCodes","questionsData","answers","answerImage","playersDefaultData","Store","clear","reduce","total","playerName","rand","Math","floor","random","questions","pop","value","alert","push","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1b16226.chunk.js","sourcesContent":["var map = {\n\t\"./background.png\": 62,\n\t\"./leto.png\": 63,\n\t\"./opened-window-transparent.png\": 64,\n\t\"./opened-window.png\": 65,\n\t\"./questions/25-kadr.png\": 66,\n\t\"./questions/25.png\": 67,\n\t\"./questions/Elton-John.png\": 68,\n\t\"./questions/Ivan-Groznyi.png\": 69,\n\t\"./questions/Jobs.png\": 70,\n\t\"./questions/Vysockyi.png\": 71,\n\t\"./questions/den-studenta.png\": 72,\n\t\"./questions/elka.png\": 73,\n\t\"./questions/olim-igry.png\": 74,\n\t\"./questions/primorskyi-krai.png\": 75,\n\t\"./questions/teleskop.png\": 76,\n\t\"./window.png\": 77\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 40;","module.exports = __webpack_public_path__ + \"static/media/background.fed2f1f1.png\";","module.exports = __webpack_public_path__ + \"static/media/leto.d3865570.png\";","module.exports = __webpack_public_path__ + \"static/media/opened-window-transparent.becac6d2.png\";","module.exports = __webpack_public_path__ + \"static/media/opened-window.d47b83c2.png\";","module.exports = __webpack_public_path__ + \"static/media/25-kadr.30c5cffa.png\";","module.exports = __webpack_public_path__ + \"static/media/25.a03e1417.png\";","module.exports = __webpack_public_path__ + \"static/media/Elton-John.1a642e53.png\";","module.exports = __webpack_public_path__ + \"static/media/Ivan-Groznyi.609ff9c3.png\";","module.exports = __webpack_public_path__ + \"static/media/Jobs.b1860067.png\";","module.exports = __webpack_public_path__ + \"static/media/Vysockyi.2094fb2c.png\";","module.exports = __webpack_public_path__ + \"static/media/den-studenta.182c9b12.png\";","module.exports = __webpack_public_path__ + \"static/media/elka.8d60e3d1.png\";","module.exports = __webpack_public_path__ + \"static/media/olim-igry.4274dcd4.png\";","module.exports = __webpack_public_path__ + \"static/media/primorskyi-krai.f75ac4dc.png\";","module.exports = __webpack_public_path__ + \"static/media/teleskop.53799aaf.png\";","module.exports = __webpack_public_path__ + \"static/media/window.ca3c1cf2.png\";","import React from \"react\";\nimport { ListGroup, Badge } from \"react-bootstrap\";\nimport { inject, observer } from \"mobx-react\";\nimport { Store } from \"../../Store\";\nimport { observable, runInAction, action } from \"mobx\";\n\nimport \"./Players.css\";\nimport { IPlayer } from \"../../data/interface\";\n// import { IPlayer } from \"../../data/interface\";\n\nexport interface IPlayersProps {\n  onClick?: (player: IPlayer) => void;\n}\n\n@inject(\"store\")\n@observer\nexport class Players extends React.Component<IPlayersProps> {\n  private get store() {\n    return (this.props as { store: Store }).store;\n  }\n\n  @observable\n  private renderTrigger: boolean | undefined = true;\n\n  @action.bound\n  private onClick(player: IPlayer) {\n    if (this.props.onClick) {\n      this.props.onClick(player);\n    }\n  }\n\n  constructor(props: {}) {\n    super(props);\n\n    setInterval(\n      () =>\n        runInAction(() => {\n          this.renderTrigger = !this.renderTrigger;\n        }),\n      1500\n    );\n  }\n\n  render() {\n    const { store } = this;\n\n    if (this.renderTrigger === undefined) {\n      return null;\n    }\n\n    return (\n      <div className=\"Players-container\">\n        <ListGroup horizontal={true}>\n          {store.players.map((player) => (\n            <ListGroup.Item\n              action={true}\n              onClick={() => {\n                this.onClick(player);\n              }}\n              key={player.name}\n            >\n              <div className={\"players-container-player-name\"}>\n                <span\n                  className={\"players-container__smile\"}\n                  dangerouslySetInnerHTML={{ __html: `&#${store.getSmile()};` }}\n                />\n\n                <div>{player.name}</div>\n                <Badge\n                  className={\"players-container-player-name__badge\"}\n                  variant=\"primary\"\n                >\n                  {store.playersScore[player.name] || 0}\n                </Badge>\n                {/* {store.currentPlayerName ? (\n                  <>\n                    {player.code === this.store.selectedplayerCode ? (\n                      <Badge\n                        className={\"Players-container-player-name__badge\"}\n                        variant=\"primary\"\n                      >\n                        Моя команда\n                      </Badge>\n                    ) : null}\n\n                    {player.code === store.playingplayerCode ? (\n                      <Badge\n                        className={\"Players-container-player-name__badge\"}\n                        variant=\"info\"\n                      >\n                        Ходит...\n                      </Badge>\n                    ) : null}\n                  </>\n                ) : null} */}\n              </div>\n            </ListGroup.Item>\n          ))}\n\n          {/* <ListGroup.Item\n            variant=\"info\"\n            action={true}\n            onClick={() => {\n              this.store.setNextPlayer();\n            }}\n          >\n            Переход хода\n          </ListGroup.Item> */}\n        </ListGroup>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./Questions.css\";\n// import { Question } from \"../Question/Question\";\nimport { inject, observer } from \"mobx-react\";\nimport { Store } from \"../../Store\";\nimport { Button } from \"react-bootstrap\";\nimport { action } from \"mobx\";\nimport { Players } from \"../Players/Players\";\n\n@inject(\"store\")\n@observer\nexport class Questions extends React.Component {\n  private get store() {\n    return (this.props as { store: Store }).store;\n  }\n\n  @action.bound\n  private onClickBegin() {\n    this.store.loadNextQuestion();\n  }\n\n  render() {\n    const { store } = this;\n\n    return (\n      <div className=\"questions-container\">\n        {!store.question ? (\n          <Button onClick={this.onClickBegin} size={\"lg\"}>\n             {store.totalScore < 25 ?  `Набираем ${store.totalScore}/25 баллов. Играть!` : `Урааа!!! С праздником!`}\n          </Button>\n        ) : null}\n\n        <Players />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { IQuestion, IAnswer, IPlayer } from \"../../data/interface\";\nimport { observer, inject } from \"mobx-react\";\nimport { Store } from \"../../Store\";\nimport { action, observable, computed } from \"mobx\";\nimport classNames from \"classnames\";\n\nimport \"./QuestionModal.css\";\nimport { Players } from \"../Players/Players\";\n\nexport interface IQuestionModalProps {\n  question: IQuestion;\n  onAnswer?: (\n    question: IQuestion,\n    answer?: IAnswer,\n    textAnswer?: string\n  ) => void;\n}\n\n@inject(\"store\")\n@observer\nexport class QuestionModal extends React.Component<IQuestionModalProps> {\n  private get store() {\n    return ((this.props as unknown) as { store: Store }).store;\n  }\n\n  @observable\n  private question!: IQuestion;\n\n  @observable\n  private isAnswered: boolean = false;\n\n  @observable\n  private maxTextToShow = 1;\n\n  @computed\n  private get texts() {\n    return this.props.question.texts.filter(\n      (_text, index) => index < this.maxTextToShow\n    );\n  }\n\n  constructor(props: IQuestionModalProps) {\n    super(props);\n\n    this.question = { ...this.props.question };\n  }\n\n  @action.bound\n  private getMoreText() {\n    this.maxTextToShow += 1;\n  }\n\n  @action.bound\n  private onClose() {\n    // FIXME: check\n    // this.store.setOpenedQuestionIndex(undefined);\n    this.store.question = undefined;\n  }\n\n  @action.bound\n  private onPlayerClick(player: IPlayer) {\n    const { store } = this;\n\n    if (this.isAnswered) {\n      return;\n    }\n\n    store.increasePlayerScore(\n      player.name,\n      store.question ? store.question.score : 0\n    );\n\n    this.isAnswered = true;\n    this.onClose();\n  }\n\n  render() {\n    const { props } = this;\n    const { question } = this.props;\n\n    return (\n      <Modal\n        show={true}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        onHide={this.onClose}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">Вопрос</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <ul>\n            {this.texts.map((text) => (\n              <li>{text}</li>\n            ))}\n          </ul>\n\n          {this.maxTextToShow < props.question.texts.length ? (\n            <Button onClick={this.getMoreText} size={\"sm\"}>\n              Подсказка\n            </Button>\n          ) : null}\n\n\n          \n\n          {question.image && (\n            <div className={\"question-modal-image-container\"}>\n              {\n                <img\n                  className={classNames(\n                    \"question-modal-image-container__image\",\n                    {\n                      \"question-modal-image-container__image-text-large\":\n                        question.isTextAnswer,\n                    }\n                  )}\n                  src={require(`../../assets/${question.image}`)}\n                  alt={\"Картинка...\"}\n                />\n              }\n            </div>\n          )}\n\n\n\n\n\n          {/* {question.isTextAnswer ? (\n            <Form.Row\n              className={classNames({\n                \"questions-text-answer-disabled\": !this.isActive,\n              })}\n            >\n              <Col md={10}>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Впишите ответ\"\n                  onChange={this.onChangeTextAnswer}\n                />\n              </Col>\n              <Col md={2}>\n                <Button\n                  variant=\"success\"\n                  onClick={() => this.onTextAnswer(this.textAnswer)}\n                >\n                  ок\n                </Button>\n              </Col>\n            </Form.Row>\n          ) : (\n            <div\n              className={classNames({\n                \"questions-list-disabled\": !this.isActive,\n              })}\n            >\n              <ListGroup>\n                {question.answers.map((answer, index) => (\n                  <ListGroup.Item\n                    action={true}\n                    onClick={() => {\n                      this.onAnswer(answer);\n                    }}\n                    key={index}\n                  >\n                    {answer.text}\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            </div>\n          )} */}\n\n          <Players onClick={this.onPlayerClick} />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n","import { Modal, AlertProps, Alert as BootstrapAlert } from \"react-bootstrap\";\nimport React from \"react\";\nimport { inject, observer } from \"mobx-react\";\nimport { Store } from \"../../Store\";\nimport { action } from \"mobx\";\n\nimport \"./Alert.css\";\n\nexport interface IAlertProps {\n  text?: string;\n  imageUrl?: string;\n  type?: AlertProps[\"variant\"];\n}\n\n@inject(\"store\")\n@observer\nexport class Alert extends React.Component<IAlertProps> {\n  private get store() {\n    return ((this.props as unknown) as { store: Store }).store;\n  }\n\n  @action.bound\n  private onHide() {\n    this.store.setAlert(undefined);\n  }\n\n  render() {\n    const { props } = this;\n\n    return (\n      <Modal\n        size=\"lg\"\n        show={true}\n        onHide={this.onHide}\n        centered\n        className={\"alert\"}\n      >\n        <Modal.Body onClick={this.onHide}>\n          <BootstrapAlert variant={this.props.type}>\n            {this.props.text}\n\n            {this.props.imageUrl ? (\n              <div className={\"alert-image-container\"}>\n                <img\n                  className={\"alert-image\"}\n                  src={require(`../../assets/${props.imageUrl}`)}\n                  alt=\"\"\n                />\n              </div>\n            ) : null}\n          </BootstrapAlert>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n","import React from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { inject, observer } from \"mobx-react\";\nimport { Store } from \"../../Store\";\n\nimport \"./Tools.css\";\n\n@inject(\"store\")\n@observer\nexport class Tools extends React.Component {\n  private get store() {\n    return ((this.props as unknown) as { store: Store }).store;\n  }\n\n  render() {\n    return (\n      <div className={\"tools-container\"}>\n        <ListGroup>\n          {/* <ListGroup.Item\n            action={true}\n            onClick={() => {\n              this.store.setNextPlayer();\n            }}\n          >\n            Переход хода\n          </ListGroup.Item> */}\n\n          <ListGroup.Item\n            action={true}\n            // onClick={() => {\n            //   this.store.sendResetState();\n            // }}\n          >\n            Сброс\n          </ListGroup.Item>\n\n          <ListGroup.Item\n            action={true}\n            onClick={() => {\n              let name = prompt(\"Имя гостя\");\n\n              if (name) {\n                this.store.addGuest(name);\n              }\n            }}\n          >\n            Новый гость\n          </ListGroup.Item>\n\n          {/* <ListGroup.Item\n            action={true}\n            onClick={() => {\n              this.store.showToast(\"олололо\");\n            }}\n          >\n            Тостер\n          </ListGroup.Item> */}\n        </ListGroup>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nimport './ServiceMenu.css'\n\nexport class ServiceMenu extends React.Component {\n  render() {\n  return <div className={\"service-menu-container\"} >{this.props.children}</div>;\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { inject, observer } from \"mobx-react\";\nimport { Store } from \"./Store\";\nimport { action } from \"mobx\";\nimport { Questions } from \"./components/Questions/Questions\";\nimport { QuestionModal } from \"./components/QuestionModal/QuestionModal\";\nimport { IQuestion, IAnswer } from \"./data/interface\";\nimport { Alert } from \"./components/Alert/Alert\";\nimport { Tools } from \"./components/Tools/Tools\";\n// import { Jumbotron } from \"react-bootstrap\";\nimport { ServiceMenu } from \"./components/ServiceMenu/ServiceMenu\";\n\n// socket.on('message', () => {\n//   alert('Connected!');\n//   console.log('connected');\n// });\n\n@inject(\"store\")\n@observer\nexport class App extends React.Component {\n  private get store() {\n    return (this.props as { store: Store }).store;\n  }\n\n  // @action.bound\n  // private onKeyDown(evt: React.KeyboardEvent) {\n  //   // private onKeyDown(evt: React.MouseEvent) {\n  //   console.log(evt);\n  // }\n\n  @action.bound\n  private onAnswer(\n    question: IQuestion,\n    answer?: IAnswer,\n    textAnswer: string = \"\"\n  ) {\n    // const { store } = this;\n\n    // const realAnswer: IAnswer = answer || {\n    //   text: textAnswer,\n    //   correct:\n    //     question.answers[0].text.toLowerCase() === textAnswer.toLowerCase(),\n    // };\n\n    // if (!!realAnswer.correct) {\n    //   if (store.currentPlayerName) {\n    //     store.increasePlayerScore(store.currentPlayerName);\n    //   }\n\n    //   store.setAlert({\n    //     // text: `Правильно! ${realAnswer.text}. Переход хода...`,\n    //     imageUrl: question.answerImage || question.image,\n    //   });\n\n    //   // FIXME: check!!\n    //   // if (store.openedQuestionId !== undefined) {\n    //   //   store.setQuestionResponded(store.openedQuestionId);\n    //   // }\n\n    //   store.loadNextQuestion();\n    // } else {\n    //   store.setAlert({\n    //     text: `У-у-у-! Не ${realAnswer.text}. Переход хода...`,\n    //   });\n    // }\n\n    // // store.setNextPlayer();\n  }\n\n  // private renderSelectTeamMessage() {\n  //   return (\n  //     <Jumbotron>\n  //       <h3>Выбирай свою команду</h3>\n  //     </Jumbotron>\n  //   );\n  // }\n\n  render() {\n    const { store } = this;\n\n    return (\n      <div className={\"app\"}>\n        {store.question ? (\n          <QuestionModal question={store.question} onAnswer={this.onAnswer} />\n        ) : null}\n\n        {store.currentAlert && (\n          <Alert\n            text={store.currentAlert.text}\n            imageUrl={store.currentAlert.imageUrl}\n          />\n        )}\n\n        <Questions />\n        {/* <Players /> */}\n        <ServiceMenu>\n          <Tools />\n        </ServiceMenu>\n      </div>\n    );\n  }\n}\n","export const smilesCodes = [\n  128512,\n  128515,\n  128516,\n  128513,\n  128518,\n  128517,\n  128514,\n  128578,\n  128579,\n  128521,\n  128522,\n  128525,\n  128536,\n  128535,\n  128538,\n  128537,\n];\n","import { IQuestion } from \"./interface\";\n\nexport const questionsData: IQuestion[] = [\n  {\n    score: 2,\n    texts: [\n      `25 января 1938 года родился известный советский актер и музыкант, сыгравший персонажа, которого зовут точно так же, как одного из гостей сегодняшней вечеринки.`,\n      `«Коселек, коселек, какой коселек?»`,\n      `«А теперь Горбатый! Я сказал, Горбатый!»`,\n      `«Глеб Жеглов и Володя Шарапов\n      За столом засиделись не зря.\n      Глеб Жеглов и Володя Шарапов\n      Ловят банду и главаря!»`,\n    ],\n    answers: [{ text: \"Высоцкий\" }],\n    answerImage: \"questions/Vysockyi.png\",\n    isTextAnswer: true,\n  },\n  {\n    score: 1,\n    texts: [\n      `Вымышленная методика воздействия на подсознание человека посредством вставки в видеоряд скрытой информации`,\n      `Использовалось в кинотеатрах якобы для увеличения продаж поп-корна и кока-колы`,\n      `Так называется альбом группы «Сплин» с самой популярной песней 2001 года «Мое сердце»`,\n    ],\n    answers: [{ text: `25-ый кадр` }],\n    answerImage: \"questions/25-kadr.png\",\n    isTextAnswer: true,\n  },\n  {\n    score: 1,\n    texts: [\n      `Фразеологизм, означающий неудовольствие какими-либо повторяющимися действиями, ситуациями`,\n      `Синоним «Снова здорОво!»`,\n      `В конце 60-х на радио «Маяк» появилась музыкальная программа под таким названием. Она шла в эфире ровно двадцать пять минут…`,\n    ],\n    answers: [{ text: `опять 25` }],\n    answerImage: \"questions/25.png\",\n    isTextAnswer: true,\n  },\n  {\n    score: 1,\n    texts: [\n      `Вспомним математику. Найдите все квадратные корни главного сегодняшнего числа, подумайте и дайте ПРАВИЛЬНЫЙ ответ.`,\n      `Главное сегодняшнее число – это 25`,\n      `Извлечь квадратный корень – решить выражение √25`,\n      `У каждого положительного числа существуют два противоположных по знаку квадратных корня.`,\n    ],\n    answers: [{ text: `±5` }],\n    answerImage: \"questions/den-studenta.png\",\n    isTextAnswer: true,\n  },\n  {\n    score: 1,\n    texts: [\n      `Какой праздник отмечается через 25 дней после окончания календарного года?`,\n      `25 января`,\n      `Татьянин день`,\n      `Сессия сдана, ура, каникулы!`,\n    ],\n    answers: [{ text: `День студента` }],\n    answerImage: \"questions/den-studenta.png\",\n    isTextAnswer: true,\n  },\n  {\n    score: 1,\n    texts: [\n      `В 25 лет этот американец основал известнейшую культовую ИТшную корпорацию`,\n      `Он же разработал первый персональный компьютер`,\n      `Круглое, румяное\n      Я расту на ветке,\n      Любят меня взрослые\n      И маленькие детки`,\n      `Основатель компании Apple`,\n    ],\n    answers: [{ text: `Стив Джобс` }],\n    answerImage: \"questions/Jobs.png\",\n    isTextAnswer: true,\n  },\n  {\n    score: 1,\n    texts: [\n      `Какое спортивное мероприятие впервые состоялось 25 января 1924 года во французском городе Шамони?`,\n      `Это мероприятие мирового масштаба, проводится каждые два года, меняя сезонность`,\n      `«Жаркие. Зимние. Твои.»`,\n      `XXII по счету подобное мероприятие проходило в Сочи в 2014 году`,\n    ],\n    answers: [{ text: `Открытие Первых зимних Олимпийских игр` }],\n    answerImage: \"questions/olim-igry.png\",\n    isTextAnswer: true,\n  },\n  {\n    score: 1,\n    texts: [\n      `Обещают, что в этом году она будет высотой ни много ни мало 25 метров! Она уже найдена в Наро-Фоминске и ей 96 лет`,\n      `Без нее трудно представить новогоднюю ночь`,\n      `Если она устанавливается на главной площади страны, как ее можно назвать?`,\n      `Если она стоит у Кремля, как ее можно назвать :-)?`,\n    ],\n    answers: [{ text: `Кремлевская елка` }],\n    answerImage: \"questions/elka.png.png\",\n    isTextAnswer: true,\n  },\n  {\n    score: 1,\n    texts: [\n      `Назовите субъект РФ с кодом 25, используя подсказки и изображение`,\n      `Административный центр – город Владивосток`,\n      `Субъект расположен на берегу моря и является крайней восточной территорией РФ. Эти два факта отражены в его названии.      `,\n    ],\n    answers: [{ text: `Приморский край` }],\n    answerImage: \"questions/primorskyi-krai\",\n    isTextAnswer: true,\n  },\n  {\n    score: 1,\n    texts: [\n      `25 марта 1947 – дата рождения Реджинальда Кеннета Дуайта, известнейшего британского музыканта, с 4 лет способного сыграть любую мелодию на фортепиано. Среди прочих заслуг получил премии «Оскар», «Гремми» и «Золотой Глобус» за саундтрек к фильму про приключения Симбы, Налы, Тимона и Пумбы. Под каким именем мы знаем этого человека?`,\n      `Песня «Can you feel the love tonight» из мультфильма «Король Лев»`,\n      `Это почти как Джон Ленон, но немного по-другому`,\n    ],\n    answers: [{ text: `Элтон Джон` }],\n    answerImage: \"questions/Elton-John\",\n    isTextAnswer: true,\n  },\n  {\n    score: 1,\n    texts: [\n      `Этот элемент таблицы Менделеева имеет атомный номер, естественно, 25`,\n\n      `По-латински его называют Манганум`,\n      `Нам известно его соединение с калием цвета фуксии, обладающее антисептическим действием`,\n      `Это соединение – перманганат калия KMnO4, или марганцовка`,\n    ],\n    answers: [{ text: `Марганец` }],\n    // answerImage: \"questions/vika_countries.png\",\n    isTextAnswer: true,\n  },\n  {\n    score: 1,\n    texts: [\n      `25 июня 1978 считается днем рождения этого необычного знамени, состоящего из известной всему миру палитры, но с отличием количества цветов.`,\n      `Этот флаг не содержит голубой цвет`,\n      `Эта всем известная палитра обычно появляется после дождя`,\n      `Этот флаг содержит шесть цветов радуги вместо семи`,\n    ],\n    answers: [{ text: `Радужный флаг ЛГБТ` }],\n    // answerImage: \"questions/vika_countries.png\",\n    isTextAnswer: true,\n  },\n  {\n    score: 1,\n    texts: [\n      `25 августа 1609 Галилео Галилей демонстрирует Большому совету и дожу Венеции новое устройство. Назовите его`,\n      `Галилео Галилей – итальянский ученый, математик, астроном, одним из первых наблюдал небесные тела и сделал ряд выдающихся астрономических открытий`,\n      `В основе этого прибора – зрительная труба, изобретенная в том же веке`,\n      `С помощью этого прибора Галилей сделал свои астрономические открытия тогда. С помощью него делаются они и сегодня. `,\n    ],\n    answers: [{ text: `Телескоп` }],\n    answerImage: \"questions/teleskop.png\",\n    isTextAnswer: true,\n  },\n  {\n    score: 1,\n    texts: [\n      `25 августа 1530 родился этот великий русский политик, известный своей подозрительностью и жестокостью`,\n      `«Казань – брал! Шпака – не брал!»`,\n      `Первый русский царь`,\n    ],\n    answers: [{ text: `Иван IV Васильевич Грозный` }],\n    answerImage: \"questions/Ivan-Groznyi.png\",\n    isTextAnswer: true,\n  },\n  {\n    score: 1,\n    texts: [\n      `Как называется 25-летняя годовщина свадьбы?`,\n      `Вспомните металл, используемый как дезинфицирующее вещество, в основном для обеззараживания воды.`,\n      `Это драгоценный металл, используемый в ювелирном деле, а также для чеканки юбилейных монет`,\n      `Ладно. Во время празднования этой свадьбы достают из закромов все столовое серебро`,\n    ],\n    answers: [{ text: `Серебряная свадьба` }],\n    // answerImage: \"questions/vika_countries.png\",\n    isTextAnswer: true,\n  },\n  {\n    score: 1,\n    texts: [\n      `День рождения этого самого известного на планете человека празднуют ежегодно 25 декабря`,\n      `Он родился в 5-м веке до нашей эры`,\n      `25 декабря – католическое рождество`,\n    ],\n    answers: [{ text: `Иисус Христос` }],\n    // answerImage: \"questions/vika_countries.png\",\n    isTextAnswer: true,\n  },\n  {\n    score: 1,\n    texts: [\n      `В свои 25 лет она начала писать серию романов, ставшую самой популярной в мире. По словам писательницы, идея этой истории вдруг «упала на голову» в переполненном поезде, следовавшем из Манчестера в Лондон. Романы переведены на 80 языков, в том числе на русский. Последние четыре книги последовательно поставили рекорды, как наиболее быстро продаваемые литературные произведения в истории.`,\n      `Действие серии происходит в мире, в значительной мере аналогичном реальному, в Англии, в 1990-х годах.`,\n      `«Я писала почти непрерывно с шести лет, но я никогда не была так взволнована идеей раньше. Я просто сидела и думала четыре часа подряд (из-за опаздывающего поезда), а все детали кипели в моём мозгу, и этот худой, черноволосый мальчик в очках, не знавший, что он волшебник, становился для меня всё более и более реальным».`,\n      `В отличие от реального мира, в этом мире среди обычных людей живут волшебники. Обычные люди не знают о существовании волшебников, так как последние тщательно маскируются.`,\n    ],\n    answers: [{ text: `Джоан Роулинг` }],\n    // answerImage: \"questions/vika_countries.png\",\n    isTextAnswer: true,\n  },\n  {\n    score: 1,\n    texts: [\n      `25 июля 1984 состоялось знаменательное событие в области космонавтики с участием женщины`,\n      `До этого такими делами занимались только мужчины`,\n      `Нет, не Гагарин, а Леонов`,\n      `Это прогулка космонавта за пределами своего корабля`,\n    ],\n    answers: [\n      {\n        text: `Первый выход женщины-космонавта Светланы Савицкой в открытый космос`,\n      },\n    ],\n    // answerImage: \"questions/vika_countries.png\",\n    isTextAnswer: true,\n  },\n  {\n    score: 1,\n    texts: [\n      `Рок-группа, отмечающая в этом году 25-летний юбилей творческой деятельности, основанная Максимом и Владимиром в Крымском мединституте в 1995 году.`,\n      `Первая совместно написанная песня – «Нарцисс»`,\n      `Визитной карточкой стала песня и клип про первого человека в космосе`,\n      `Мы вместе ходили на их концерт в прошлой жизни`,\n    ],\n    answers: [{ text: `Ундервуд` }],\n    // answerImage: \"questions/vika_countries.png\",\n    isTextAnswer: true,\n  },\n  {\n    score: 1,\n    texts: [\n      `Продукт из категории «Программное обеспечение», родившийся, как и Вика, 25 лет назад, и новшества которого активно используются и в настоящих версиях этой программы (например, рабочий стол со значками, панель задач и меню «Пуск».)`,\n      `В название этой программы можно выглянуть `,\n      `Это операционная система`,\n      `Это операционная система от Майкрософт, выпущенная в 1995 году`,      \n    ],\n    answers: [{ text: `Microsoft Windows 95` }],\n    // answerImage: \"questions/vika_countries.png\",\n    isTextAnswer: true,\n  },\n  {\n    score: 1,\n    texts: [\n      `Вы удивитесь, но главному персонажу этого известнейшего произведения советского писателя, тоже 25 лет, хоть и выглядит он, как бездомный пес.`,\n\n      `Абырвалг!`,\n      `Полиграф Полиграфович Шариков`,\n      `Булгаков`,\n    ],\n    answers: [{ text: `Собачье сердце` }],\n    // answerImage: \"questions/vika_countries.png\",\n    isTextAnswer: true,\n  },\n  {\n    score: 1,\n    texts: [\n      `Эта передача празднует в этом году свое 25-летие. Принять участие в ней могут все, кому медведь не наступил на ухо`,\n      `Игра строится на том, что нот всего семь`,\n      `Я угадаю правильный ответ с первого слова`,\n      `Бессменный ведущий – Валдис Пельш`,\n    ],\n    answers: [{ text: `Угадай мелодию` }],\n    // answerImage: \"questions/vika_countries.png\",\n    isTextAnswer: true,\n  },\n  {\n    score: 1,\n    texts: [\n      `25 мая 1977 года состоялся первый показ масштабной космической саги, занимающей второе место в истории по общим кассовым сборам.`,\n      `задумана и реализована американским режиссёром Джорджем Лукасом`,\n      `состоит из 11 эпизодов, часть из которых развивается в обратном порядке`,\n      `Люк, я твой отец`,\n    ],\n    answers: [{ text: `Звездные войны` }],\n    // answerImage: \"questions/vika_countries.png\",\n    isTextAnswer: true,\n  },\n  {\n    score: 1,\n    texts: [\n      `Этот великий человек родился 22 ноября. Благодаря его труду его знает всякий, кто интересуется русским языком.`,\n      `Русский писатель, этнограф и лексикограф, собиратель фольклора`,\n      `Составил непревзойденный по объему словарь с объяснением значений слов, использовавшихся в устной и письменной речи XIX века`,\n      `В фамилии 4 буквы`,\n    ],\n    answers: [{ text: `Владимир Даль` }],\n    // answerImage: \"questions/vika_countries.png\",\n    isTextAnswer: true,\n  },\n];\n","import { IPlayer } from \"./interface\";\n\nexport const playersDefaultData: IPlayer[] = [\n  {\n    name: \"Вика\",\n  },\n  {\n    name: \"Глеб\",\n  },\n  {\n    name: \"Ира\",\n  },\n  {\n    name: \"Саша\",\n  },\n  {\n    name: \"Юля\",\n  },\n];\n","import { smilesCodes } from \"./data/Smiles\";\n// import io from \"socket.io-client\";\nimport { observable, action, computed } from \"mobx\";\n\nimport { questionsData } from \"./data/QuestionsData\";\nimport { playersDefaultData } from \"./data/PlayersDefaultData\";\nimport { IPlayer, IQuestion } from \"./data/interface\";\n\nexport class Store {\n  @observable\n  private questions: IQuestion[] = [];\n\n  @observable\n  public question: IQuestion | undefined = undefined;\n\n  @observable\n  public players: IPlayer[] = [];\n\n  @observable\n  public curentQuestionHoverId: number | undefined;\n\n  @observable\n  public currentPlayerName: string | undefined;\n\n  @observable\n  public playersScore: { [playerName: string]: number } = {};\n\n  @observable\n  public currentAlert:\n    | { text?: string; imageUrl?: string }\n    | undefined = undefined;\n\n  @observable\n  public respondedQuestionsIndices: number[] = [];\n\n  @computed\n  public get totalScore() {\n    return Object.keys(this.playersScore).reduce(\n      (total, playerName) => total + this.playersScore[playerName],\n      0\n    );\n  }\n\n  constructor() {\n    this.clear();\n  }\n\n  @action.bound\n  public getSmile() {\n    const rand = Math.floor(Math.random() * Math.floor(smilesCodes.length));\n    return smilesCodes[rand];\n  }\n\n  @action.bound\n  public loadNextQuestion() {\n    this.question = this.questions.pop();\n  }\n\n  @action.bound\n  public clear() {\n    this.players = [...playersDefaultData];\n    this.questions = [...questionsData];\n  }\n\n  @action.bound\n  public increasePlayerScore(playerName: string, value: number) {\n    this.playersScore[playerName] =\n      (this.playersScore[playerName] || 0) + value;\n  }\n\n  @action.bound\n  public setAlert(alert?: { text?: string; imageUrl?: string }) {\n    this.currentAlert = alert;\n  }\n\n  @action.bound\n  public addGuest(name: string) {\n    this.players.push({\n      name,\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport { Provider } from 'mobx-react';\nimport { Store } from './Store';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={new Store()}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}